import '@/services/register-server';
import '@/services/register-client';

import type { Metadata } from 'next';

import { Geist, Geist_Mono } from 'next/font/google';
import { NextIntlClientProvider } from 'next-intl';
import { getLocale } from 'next-intl/server';

import { auth } from '@/auth';
import { GlobalMonitor } from '@/components/monitor';
import { Toaster } from '@/components/ui/sonner';

import { getThemeColor } from './server/theme-color';

import './globals.css';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Todo Demo For Next.js',
  description: 'Generated by create next app',
};

export default async function RootLayout({ children }: Readonly<{ children: React.ReactNode }>) {
  const locale = await getLocale();
  const color = await getThemeColor();
  const session = await auth();

  return (
    <html lang={locale} className={`theme-${color}`} suppressHydrationWarning>
      <head>
        <script type="text/javascript" src="/theme.js" />
      </head>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <NextIntlClientProvider>
          <GlobalMonitor channelId={session?.user?.email ?? ''} />
          {children}
        </NextIntlClientProvider>
        <Toaster />
      </body>
    </html>
  );
}
